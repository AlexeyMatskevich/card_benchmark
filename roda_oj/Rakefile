# frozen_string_literal: true

require 'bundler/setup'
require 'sequel_tools'
require_relative 'database'

base_config = SequelTools.base_config(
  project_root: File.expand_path(__dir__),
  dbadapter: Database::URI.scheme || 'postgres',
  dbname: Database::DB_NAME,
  username: Database::URI.user || 'postgres',
  password: Database::URI.password || ENV['PGPASSWORD'] || nil,
  dbhost: Database::URI.host || 'localhost',
  dbport: Database::URI.port || '5432',
  log_level: :info,
  dump_schema_on_migrate: ENV['RACK_ENV'] == 'development',
  pg_dump: 'pg_dump --no-owner'
)

namespace 'db' do
  SequelTools.inject_rake_tasks base_config, self
end

namespace 'db' do
  desc 'Creates a new seed'
  task :new_seed, [:name] do |_task, args|
    abort('Seed name is missing - aborting') unless args[:name]
    require 'time'
    filename = "db/seeds/#{Time.now.strftime '%Y%m%d%H%M%S'}_#{args[:name]}.rb"
    File.write filename, <<~MIGRATIONS_TEMPLATE_END
      Sequel.seed do
        def run

        end
      end
    MIGRATIONS_TEMPLATE_END
    puts "The new seed file was created under #{filename.inspect}"
  end
end
